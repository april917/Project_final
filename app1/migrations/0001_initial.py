# Generated by Django 5.1 on 2024-09-04 03:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CapacityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity_status', models.CharField(choices=[('Normal', 'Normal'), ('Overloaded', 'Overloaded'), ('Underutilized', 'Underutilized')], max_length=50)),
                ('resource_needs', models.TextField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('timeline', models.DateField()),
                ('required_hours', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(default='Unknown', max_length=10)),
                ('experience', models.PositiveIntegerField()),
                ('availability', models.CharField(choices=[('Available', 'Available'), ('Occupied', 'Occupied')], max_length=50)),
                ('burn_rate', models.FloatField(default=0.0)),
                ('performance_rating', models.FloatField(default=0.0)),
                ('overtime', models.BooleanField(default=False)),
                ('number_of_projects', models.PositiveIntegerField(default=0)),
                ('average_monthly_hours', models.PositiveIntegerField(default=0)),
                ('time_spent_company', models.PositiveIntegerField(default=0)),
                ('age', models.PositiveIntegerField(default=0)),
                ('years_at_company', models.PositiveIntegerField()),
                ('promotion_last_5_years', models.BooleanField(default=False)),
                ('project_assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='app1.project')),
                ('roles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='app1.role')),
                ('skills', models.ManyToManyField(related_name='employees', to='app1.skill')),
            ],
        ),
        migrations.CreateModel(
            name='AllocationAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_message', models.CharField(max_length=255)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='required_skills',
            field=models.ManyToManyField(related_name='projects', to='app1.skill'),
        ),
    ]
